name: CI
on: [push, pull_request]

jobs:
  static-checks:
    name: Static Code Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Rust Format Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Clippy Lint Check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # needed to post all lints as annotations for the pushed commit
          args: --all-features

  test:
    name: Test
    needs: static-checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        toolchain: [stable, beta, nightly]
    env:
      RUST_BACKTRACE: 1 # Print the full traceback if a test fails
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  deploy:
    name: Deploy for ${{ matrix.os }}
    needs: test
    if: contains(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
            linux,
            windows,
            macos
        ]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: rust_reime005_bin_test
            asset_name: rust_reime005_bin_test-linux
          - name: windows
            os: windows-latest
            artifact_name: rust_reime005_bin_test.exe
            asset_name: rust_reime005_bin_test-windows
          - name: macos
            os: macos-latest
            artifact_name: rust_reime005_bin_test
            asset_name: rust_reime005_bin_test-macos

    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

    - name: Build & Deploy to crates.io
      env:
        CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
      run: |
        cargo build --release --locked
        cargo publish --token $CRATES_TOKEN

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
